<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pers.ash.shiro.mapper.UserMapper">

  	<!-- ========================== 【 基本增删改查 】  =========================== -->
	<select id="findById" parameterType="String"
		resultType="User">
		SELECT * FROM shiro_user WHERE id=#{id}
	</select>
	
	<select id="findByUsername" parameterType="String"
		resultType="User">
		SELECT * FROM shiro_user WHERE username=#{username}
	</select>

	<select id="findAll" resultType="User">
		SELECT * FROM shiro_user
	</select>

	<insert id="add" parameterType="User">
		INSERT INTO
		shiro_user(id,username,password,salt,createDate,loginCount,email,phone,gender,age,description,state)
		VALUES(#{id},#{username},#{password},#{salt},#{createDate},#{loginCount},#{email},#{phone},#{gender},#{age},#{description},#{state})
	</insert>

	<delete id="delete" parameterType="String">
		DELETE FROM shiro_user WHERE
		id=#{id}
	</delete>
	
	<delete id="deleteAll">
		DELETE FROM shiro_user
	</delete>

	<update id="update" parameterType="User">
		UPDATE shiro_user SET
		username=#{username},password=#{password},salt=#{salt},loginCount=#{loginCount},
		email=#{email},phone=#{phone},gender=#{gender},age=#{age},description=#{description},state=#{state}
		WHERE id=#{id}
	</update>
	<!-- ================================================================== -->
	
	<!-- ========================= 【 给一个用户分配角色 】  ======================== -->
	<insert id="correlationRole">
		INSERT INTO 
		shiro_user_role(userId,roleId)
		VALUES(#{userId},#{roleId})
	</insert>
	<!-- ========================= 【 给一个用户删除角色 】  ======================== -->
	<delete id="uncorrelationRole">
		DELETE FROM shiro_user_role WHERE 
		userid=#{userId} AND roleId=#{roleId}
	</delete>
	<!-- ======================== 【 查询一个用户的某个角色 】  ======================= -->
	<select id="findUserRole" resultType="Role">
		SELECT r.* 
		FROM shiro_role r 
		LEFT JOIN shiro_user_role ur 
		ON ur.roleId=r.id 
		WHERE ur.userId=#{userId} AND r.id=#{roleId}
	</select>
	<!-- ========================= 【 查询用户拥有的角色 】 ========================= -->
	<select id="findRoles" resultType="Role">
		SELECT r.* FROM
		shiro_user_role ur LEFT JOIN shiro_role r ON ur.roleId=r.id
		WHERE
		ur.userId=#{userId}
	</select>
	<select id="findStringRoles" resultType="String">
		SELECT r.id FROM
		shiro_user_role ur LEFT JOIN shiro_role r ON ur.roleId=r.id
		WHERE
		ur.userId=#{userId}
	</select>
	<!-- ========================= 【 查询用户拥有的权限 】 ========================= -->
	<select id="findPermissions" resultType="Permission">
		SELECT p.* FROM
		shiro_permission p
		LEFT JOIN shiro_role_permission rp ON p.id=rp.permissionId
		LEFT JOIN shiro_role r ON r.id=rp.roleId
		LEFT JOIN shiro_user_role ur ON ur.roleId=r.id
		WHERE ur.userId=#{userId}
	</select>
	<select id="findStringPermissions" resultType="String">
		SELECT p.id FROM
		shiro_permission p
		LEFT JOIN shiro_role_permission rp ON p.id=rp.permissionId
		LEFT JOIN shiro_role r ON r.id=rp.roleId
		LEFT JOIN shiro_user_role ur ON ur.roleId=r.id
		WHERE ur.userId=#{userId}
	</select>
	<!-- ========================= 【 查询用户拥有的角色 】  ========================= -->
	<select id="findUserRoles" parameterType="String" resultMap="UserVo">
		SELECT
		u.id as user_id,
		u.username as user_username,
		u.password as user_password,
		u.createDate as user_createDate,
		u.loginCount as user_loginCount,
		u.description as user_description,
		u.email as user_email,
		u.phone as user_phone,
		u.gender as user_gender,
		u.age as user_age,
		r.id as role_id,
		r.name as role_name,
		r.description as role_description
		FROM
		shiro_user u
		LEFT JOIN
		shiro_user_role ur ON
		u.id=ur.userId
		LEFT JOIN
		shiro_role r ON
		ur.roleId=r.id
		WHERE u.id=#{userId}
	</select>

	<resultMap id="UserVo" type="UserVo">
		<id property="id" column="user_id" />
		<result property="username" column="user_username" />
		<result property="password" column="user_password" />
		<result property="createDate" column="user_createDate" />
		<result property="loginCount" column="user_loginCount" />
		<result property="description" column="user_description" />
		<result property="email" column="user_email" />
		<result property="phone" column="user_phone" />
		<result property="gender" column="user_gender" />
		<result property="age" column="user_age" />
		<collection property="roles" ofType="Role">
			<id property="id" column="role_id"/>
			<result property="name" column="role_name"/>
			<result property="description" column="role_description"/>
		</collection>
	</resultMap>
</mapper>